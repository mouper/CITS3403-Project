"""Add tournament and user related models.

Revision ID: 250fd77b4674
Revises: 1819f0b6960b
Create Date: 2025-05-03 23:39:49.615666

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '250fd77b4674'
down_revision = '1819f0b6960b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('friends',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('friend_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Text(), nullable=False),
    sa.CheckConstraint("status IN ('pending', 'accepted')", name='status_check'),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'friend_id')
    )
    op.create_table('tournaments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('game_type', sa.Text(), nullable=True),
    sa.Column('format', sa.Text(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('is_draft', sa.Boolean(), nullable=True),
    sa.Column('round_time_minutes', sa.Integer(), nullable=True),
    sa.Column('total_rounds', sa.Integer(), nullable=True),
    sa.Column('include_creator_as_player', sa.Boolean(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint("format IN ('round robin', 'swiss', 'single elimination')", name='format_check'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('game_type', sa.Text(), nullable=True),
    sa.Column('games_played', sa.Integer(), nullable=True),
    sa.Column('games_won', sa.Integer(), nullable=True),
    sa.Column('games_lost', sa.Integer(), nullable=True),
    sa.Column('win_percentage', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('round_number', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('guest_name', sa.Text(), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('is_confirmed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('player1_id', sa.Integer(), nullable=False),
    sa.Column('player2_id', sa.Integer(), nullable=False),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.CheckConstraint("status IN ('scheduled', 'completed', 'forfeit')", name='match_status_check'),
    sa.ForeignKeyConstraint(['player1_id'], ['tournament_players.id'], ),
    sa.ForeignKeyConstraint(['player2_id'], ['tournament_players.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['rounds.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['winner_id'], ['tournament_players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tournament_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('wins', sa.Integer(), nullable=True),
    sa.Column('losses', sa.Integer(), nullable=True),
    sa.Column('draws', sa.Integer(), nullable=True),
    sa.Column('opponent_win_percentage', sa.Float(), nullable=True),
    sa.Column('opp_opp_win_percentage', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['tournament_players.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tournament_results')
    op.drop_table('matches')
    op.drop_table('tournament_players')
    op.drop_table('rounds')
    op.drop_table('user_stats')
    op.drop_table('tournaments')
    op.drop_table('friends')
    # ### end Alembic commands ###
